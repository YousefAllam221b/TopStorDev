#!/bin/sh
export ETCDCTL_API=3
cd /TopStor/
web='/var/www/html/des20/Data/CIFSstatus.log';
logging='/var/www/html/des20/Data/currentinfo2.log'
glog='/var/www/html/des20/Data/TopStor.log';
runningpools='/pacedata/pools/runningpools'
txtres='/TopStordata/'`basename $0`'.txt'
rm -rf $txtres 2>/dev/null
pool=`echo $@ | awk -F'pool=' '{print $2}' | awk '{print $1}'`;
userreq=`echo $@ | awk -F'user=' '{print $2}' | awk '{print $1}'`;
myhost=`hostname -s`
ips='0'

#run=`echo $@ | awk -F'run=' '{print $2}' | awk '{print $1}'`;
#echo $run | grep yes
#if [ $? -ne 0 ];
#then 
# exit
#fi
echo $@ > /root/volactivateImportparamNFS
privilege="CIFS";
contrun=`./privthis.sh $privilege $userreq`;
if [[ $contrun == 'true' ]]
then
 echo starting
 echo starting Volume NFS activation for the pool $pool >> /root/volactivateImportparam
 ls /$pool | grep 'exports\.'
 if [ $? -eq 0 ];
 then 
  vols=`ls /$pool | grep 'exports\.' `
  echo "${vols[@]}" | while read l;
  do
   echo regstring $l
   registry=`cat /${pool}/$l | grep SUMMARY | awk '{print $NF}'`
   ipaddr=` echo $registry | awk -F'/' '{print $10}'`
   ipsubnet=` echo $registry | awk -F'/' '{print $11}'`
   name=`echo $l | awk -F'exports.' '{print $2}'`
   reg=`echo $registry | sed 's/ /\,/g'`
   /pace/etcdput.py volumes/NFS/$myhost/$pool/$name $reg
   /TopStor/nfs.sh $pool $name $ipaddr $ipsubnet
  done
 fi
fi
#else
#  echo "${vols[@]}" | awk '{print $2}' | sed "s/'//g" | sed "s/)//g" | sed "s/(//g"  | while read l;
#  do
#   pool=`echo $l | awk -F'/' '{print $1}'`
#   name=`echo $l | awk -F'/' '{print $2}'`
#   echo volume=$name
#   path='/'${pool}'/'${name}
#   shortname=`echo ${name} | rev | cut -d_ -f2- | rev`
#  # ln '/'${pool}'/'${name} '/'${pool}'/'${shortname}
#   #path='/'${pool}'/'${shortname}
#   who=`echo $l | awk -F'/' '{print $3}'`
#   access=`echo $l | awk -F'/' '{print $4}'`
#   sync=`echo $l | awk -F'/' '{print $5}'`
#   secure=`echo $l | awk -F'/' '{print $6}'`
#   squash=`echo $l | awk -F'/' '{print $7}'`
#   subtree=`echo $l | awk -F'/' '{print $8}'`
#   writev=`echo $l | awk -F'/' '{print $9}'`
#   ipaddr=`echo $l | awk -F'/' '{print $10}'`
#   ipsubnet=`echo $l | awk -F'/' '{print $11}'`
#   writev=`echo $writev | sed 's/\,/ /g' `;
#   echo $ipsubnet > /TopStordata/NFStmp
#   echo $path $who'('$access,$sync,$secure,$squash,$subtree')' > /TopStordata/exports.$name 
#   echo '# ipaddress = IPADDRESS' >> /TopStordata/exports.$name
#   echo '# ipsubnet = IPSUBNET' >> /TopStordata/exports.$name
#   sed -i "s/IPADDRESS/$ipaddr/g" /TopStordata/exports.${name}
#   sed -i "s/IPSUBNET/$ipsubnet/g" /TopStordata/exports.${name}
#   yes | cp /TopStordata/exports.$name /$pool/
#   cat /TopStordata/exports.$name >> /TopStordata/exports.$ipaddr
#   echo sending fns $pool $name $ipaddr $ipsubnet
#   /TopStor/nfs.sh $pool $name $ipaddr $ipsubnet
#  done
# fi
# runvol=`./etcdget.py vol $pool` 
# vols=`zfs list -H -o name,prot:kind | grep NFS | grep $pool | awk '{print $1}' | sed "s/$pool\///g" | grep -v $pool`
# echo "${vols[@]}" | while read name;
# do
#  echo the runvol=$runvol
#  echo the name=$name
#  echo  $runvol | grep $name 
#  if [ $? -ne 0 ];
#  then
#   echo the volume is not in registry
#   ipaddr=`zfs get -H ip:addr $pool/$name | awk '{print $3}'`
#   echo got ip $ipaddr
#   ipsubnet=`zfs get -H ip:subnet $pool/$name | awk '{print $3}'`
#   echo got ip $ipsubnet
#   path='/'${pool}'/'${name}
#   echo $path 10.15.15.*'('rw,sync,insecure,no_root_squash,no_all_squash')' > /TopStordata/exports.$name 
#   echo '# ipaddress = IPADDRESS' >> /TopStordata/exports.$name
#   echo '# ipsubnet = IPSUBNET' >> /TopStordata/exports.$name
#   sed -i "s/IPADDRESS/$ipaddr/g" /TopStordata/exports.${name}
#   sed -i "s/IPSUBNET/$ipsubnet/g" /TopStordata/exports.${name}
#   admin=$userreq
#   yes | cp /TopStordata/exports.$name /$pool/
#   volsvalue=$pool'/'$name'/*/rw/sync/insecure/no_root_squash/no_all_squash/yes/'$ipaddr'/'$ipsubnet
#   /pace/etcdput.py volumes/NFS/$myhost/$pool/$name $volsvalue
#   echo 2 /TopStor/nfs.sh $pool $name $ipaddr $ipsubnet
#   /TopStor/nfs.sh $pool $name $ipaddr $ipsubnet
#  fi
# done
##fi
